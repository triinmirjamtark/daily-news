{"version":3,"sources":["components/Navbar.js","apollo.js","components/Article.js","components/ArticleFeed.js","components/App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","apollo","ApolloClient","uri","Article","_ref","data","isSmall","href","url","target","src","urlToImage","alt","source","name","title","query","gql","_templateObject","ArticleFeed","_useState","useState","_useState2","Object","slicedToArray","setData","client","then","response","articles","catch","error","console","log","map","article","i","components_Article","key","App","Fragment","components_Navbar","components_ArticleFeed","ReactDOM","render","components_App","document","getElementById"],"mappings":"8LAQeA,EANA,WACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,+BCFOC,EAAA,UAAIC,GAAa,CAC5BC,IAAK,oCCSMC,EAVC,SAAAC,GAAqB,IAAnBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,QACpB,OACIV,EAAAC,EAAAC,cAAA,KAAGS,KAAMF,EAAKG,IAAKC,OAAO,SAASV,UAAWO,EAAU,yBAA2B,WAC/EV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBW,IAAKL,EAAKM,WAAYC,IAAI,KAC1DhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBM,EAAKQ,OAAOC,MAC9ClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBM,EAAKU,uMCAlD,IAAMC,QAAQC,GAAHC,KAmCIC,EAtBK,WAAM,IAAAC,EAEEC,mBAAS,IAFXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEff,EAFeiB,EAAA,GAETG,EAFSH,EAAA,GAQtB,OAJAI,EAAOV,MAAM,CAACA,UACbW,KAAK,SAAAC,GAAQ,OAAIH,EAAQG,EAASvB,KAAKwB,YACvCC,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,KAGxBnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACTM,EAAK6B,IAAI,SAACC,EAASC,GAAV,OACXxC,EAAAC,EAAAC,cAACuC,EAAD,CACI/B,SAAU8B,EAAI,GAAK,IAAM,IAAMA,EAAI,GAAK,IAAM,IAAMA,EAAI,GAAK,IAAM,EACnE/B,KAAM8B,EACNG,IAAKF,MAGTxC,EAAAC,EAAAC,cAAA,KAAGS,KAAK,uBAAuBE,OAAO,UAAtC,2BCvBG8B,EATH,WACV,OACE3C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2C,SAAA,KACE5C,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAC4C,EAAD,cCJNC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.eb7f49a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">DAILY NEWS</div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import ApolloClient from 'apollo-boost';\r\n\r\nexport default new ApolloClient({\r\n    uri: 'https://mrtns.ee/graphql'\r\n});","import React from 'react';\r\n\r\nconst Article = ({data, isSmall}) => {\r\n    return (\r\n        <a href={data.url} target=\"_blank\" className={isSmall ? 'article article--small' : 'article'}>\r\n            <img className=\"article__image\" src={data.urlToImage} alt=\"\" />\r\n            <div className=\"article__source\">{data.source.name}</div>\r\n            <div className=\"article__title\">{data.title}</div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Article;","import React, { useState } from 'react';\r\nimport client from '../apollo';\r\nimport gql from 'graphql-tag';\r\n\r\nimport Article from './Article';\r\n\r\n\r\nconst query = gql`\r\nquery {\r\n    articles {\r\n      title\r\n      source {\r\n        name \r\n      }\r\n      urlToImage\r\n      url\r\n    }\r\n  }\r\n`\r\n\r\nconst ArticleFeed = () => {\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    client.query({query})\r\n    .then(response => setData(response.data.articles))\r\n    .catch(error => console.log(error))\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            { data.map((article, i) => \r\n            <Article \r\n                isSmall={(i + 1) % 5 === 0 || (i + 2) % 5 === 0 || (i + 3) % 5 === 0} \r\n                data={article} \r\n                key={i} \r\n                /> \r\n            )}\r\n            <a href=\"https://newsapi.org/\" target=\"_blank\">Made with NewsApi.org</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleFeed;","import React from 'react';\n\nimport Navbar from './Navbar';\nimport ArticleFeed from './ArticleFeed'\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <ArticleFeed />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './assets/style.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}